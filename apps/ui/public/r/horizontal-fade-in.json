{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "horizontal-fade-in",
  "type": "registry:block",
  "title": "Horizontal Fade In",
  "description": "A horizontal fade text component.",
  "dependencies": [
    "motion"
  ],
  "files": [
    {
      "path": "components/ui/totheprod-ui/horizontal-fade-in/horizontal-fade-in.tsx",
      "content": "'use client'\n\nimport { cn } from '@/lib/utils'\nimport { motion, useScroll, useTransform } from 'motion/react'\nimport { useEffect, useRef, useState } from 'react'\n\ninterface HorizontalFadeInProps {\n  /**\n   * The text to display\n   */\n  text: string\n  /**\n   * Additional CSS classes to apply to the component\n   */\n  className?: string\n\n  /**\n   * The scroll container id to use\n   */\n  scrollContainerId: string\n\n  /**\n   * The overlap percentage\n   */\n  overlap?: number\n}\n\nexport const HorizontalFadeIn = ({\n  text,\n  className,\n  scrollContainerId,\n  overlap = 0.3,\n}: HorizontalFadeInProps) => {\n  const scrollContainerRef = useRef<HTMLElement | null>(null)\n  const [scrollPercentage, setScrollPercentage] = useState(0)\n\n  useEffect(() => {\n    const container = document.getElementById(scrollContainerId)\n    scrollContainerRef.current = container\n  }, [scrollContainerId])\n\n  const { scrollYProgress } = useScroll({\n    container: scrollContainerRef,\n  })\n\n  useEffect(() => {\n    const unsubscribe = scrollYProgress.on('change', (latest) => {\n      const percentage = Math.round(latest * 100)\n      setScrollPercentage(percentage)\n    })\n\n    return () => unsubscribe()\n  }, [scrollYProgress])\n\n  const words = text.split(' ')\n\n  return (\n    <div className={cn('w-full text-5xl font-medium', className)}>\n      {words.map((word, index) => {\n        const start = (index / words.length) * (1 - overlap)\n        const end = ((index + 1) / words.length) * (1 - overlap) + overlap\n\n        const opacity = useTransform(scrollYProgress, [start, end], [0, 1])\n        const translateX = useTransform(scrollYProgress, [start, end], [1000, 0])\n\n        return (\n          <motion.span\n            key={index}\n            className=\"inline-block pl-2\"\n            style={{\n              opacity,\n              translateX,\n            }}\n          >\n            {word}\n          </motion.span>\n        )\n      })}\n    </div>\n  )\n}\n",
      "type": "registry:component"
    }
  ]
}