{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "wavy-text",
  "type": "registry:block",
  "title": "Wavy Text",
  "description": "A wavy text component.",
  "dependencies": [
    "motion"
  ],
  "files": [
    {
      "path": "components/ui/totheprod-ui/wavy-text/wavy-text.tsx",
      "content": "'use client'\n\nimport { cn } from '@/lib/utils'\nimport { motion } from 'motion/react'\nimport { useState } from 'react'\n\ninterface WavyTextProps {\n  /**\n   * The text to display\n   */\n  text: string\n  /**\n   * Additional CSS classes to apply to the component\n   */\n  className?: string\n  /**\n   * The base delay for the animation\n   */\n  baseDelay?: number\n  /**\n   * Horizontal direction (default: towards-ends)\n   */\n  horizontalDirection?: 'towards-ends' | 'towards-center'\n}\n\n/**\n * WavyText - A wavy text component\n *\n * A component that displays a text with a wavy animation.\n *\n * @example\n * ```tsx\n * <WavyText text=\"Hello\" />\n * ```\n */\nexport const WavyText = ({\n  text,\n  className,\n  baseDelay = 0.05,\n  horizontalDirection = 'towards-ends',\n}: WavyTextProps) => {\n  const [isHovered, setIsHovered] = useState(false)\n  const textLength = text.length\n\n  const getDelay = (index: number) => {\n    const distanceFromCenter = Math.abs(index - (textLength - 1) / 2)\n    const maxDistance = (textLength - 1) / 2\n\n    if (horizontalDirection === 'towards-center') {\n      return (maxDistance - distanceFromCenter) * baseDelay\n    }\n\n    return distanceFromCenter * baseDelay\n  }\n\n  return (\n    <div\n      className={cn(\n        'font-bold text-4xl text-center uppercase flex items-center overflow-hidden',\n        className\n      )}\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n    >\n      {text.split('').map((char, index) => {\n        const delay = getDelay(index)\n\n        return (\n          <motion.div key={index} className=\"relative\">\n            <motion.span\n              className=\"inline-block leading-none\"\n              initial={{ y: 0 }}\n              animate={{ y: isHovered ? '-100%' : 0 }}\n              transition={{\n                duration: 0.2,\n                delay,\n                ease: 'easeInOut',\n              }}\n            >\n              {char}\n            </motion.span>\n            <motion.span\n              className=\"inline-block leading-none absolute top-0 left-0\"\n              initial={{ y: '100%' }}\n              animate={{ y: isHovered ? 0 : '100%' }}\n              transition={{\n                duration: 0.2,\n                delay,\n                ease: 'easeInOut',\n              }}\n            >\n              {char}\n            </motion.span>\n          </motion.div>\n        )\n      })}\n    </div>\n  )\n}\n",
      "type": "registry:component"
    }
  ]
}